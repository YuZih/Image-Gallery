{"version":3,"file":"js/adminAdd.9890d6d8.js","mappings":"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","sources":["webpack://vue-gallery/./src/views/AdminAddView.vue","webpack://vue-gallery/src/views/AdminAddView.vue","webpack://vue-gallery/./src/views/AdminAddView.vue?44ce","webpack://vue-gallery/./src/views/AdminAddView.vue?ee5b"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('DefaultLayout',[_c('main',{staticClass:\"formCtn container my-4\"},[_c('form',{attrs:{\"role\":\"form\"},on:{\"submit\":function($event){$event.preventDefault();$event.stopPropagation();return _vm.handleSubmit.apply(null, arguments)}}},[_c('h3',{staticClass:\"container text-center\"},[_vm._v(\"Add New Post\")]),_c('div',{staticClass:\"row\"},[_c('label',{staticClass:\"col-sm-2 col-form-label\",attrs:{\"for\":\"inputTitle\"}},[_vm._v(\"Title\"),_c('span',[_vm._v(\"*\")])]),_c('div',{staticClass:\"field col-sm-10\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.formData.title),expression:\"formData.title\"}],staticClass:\"form-control\",attrs:{\"type\":\"text\",\"id\":\"inputTitle\",\"name\":\"title\",\"placeholder\":\"Enter post title here\"},domProps:{\"value\":(_vm.formData.title)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.formData, \"title\", $event.target.value)}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showErrorMsg && !_vm.formData.title.trim()),expression:\"showErrorMsg && !formData.title.trim()\"}],staticClass:\"errorMsg\"},[_vm._v(\"Title is required.\")])])]),_c('div',{staticClass:\"row\"},[_c('label',{staticClass:\"col-sm-2 col-form-label\",attrs:{\"for\":\"contentArea\"}},[_vm._v(\"Content\"),_c('span',[_vm._v(\"*\")])]),_c('div',{staticClass:\"field col-sm-10\"},[_c('textarea',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.formData.content),expression:\"formData.content\"}],staticClass:\"form-control\",attrs:{\"id\":\"contentArea\",\"name\":\"content\",\"rows\":\"10\",\"placeholder\":\"Enter what you want to share here\"},domProps:{\"value\":(_vm.formData.content)},on:{\"input\":function($event){if($event.target.composing)return;_vm.$set(_vm.formData, \"content\", $event.target.value)}}}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showErrorMsg && !_vm.formData.content.trim()),expression:\"showErrorMsg && !formData.content.trim()\"}],staticClass:\"errorMsg\"},[_vm._v(\"Content is required.\")])])]),_c('div',{staticClass:\"row\"},[_c('label',{staticClass:\"col-sm-2 col-form-label\",attrs:{\"for\":\"inputCover\"}},[_vm._v(\"Cover Image\"),_c('span',[_vm._v(\"*\")])]),_c('div',{staticClass:\"field col-sm-4\"},[_c('input',{ref:\"fileInput\",staticClass:\"d-none\",attrs:{\"type\":\"file\",\"accept\":\"image/*\",\"id\":\"inputCover\",\"name\":\"cover\"},on:{\"change\":_vm.updateFileName}}),_c('button',{staticClass:\"chooseBtn form-control\",attrs:{\"type\":\"button\"},on:{\"click\":_vm.triggerFileInput}},[_vm._v(_vm._s(_vm.fileName ? \"Reselect file\" : \"Choose file\"))]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showErrorMsg && !_vm.fileName),expression:\"showErrorMsg && !fileName\"}],staticClass:\"errorMsg\"},[_vm._v(\"Cover image is required.\")])]),_c('div',{staticClass:\"col-sm-6\"},[_c('input',{staticClass:\"form-control\",attrs:{\"type\":\"text\",\"readonly\":\"\",\"placeholder\":\"No file chosen\"},domProps:{\"value\":_vm.fileName}})]),(_vm.coverPreviewURL)?_c('div',{staticClass:\"coverCtn\"},[_c('div',{staticClass:\"col-sm-10 offset-sm-2\"},[_c('img',{staticClass:\"coverPreview\",attrs:{\"src\":_vm.coverPreviewURL,\"alt\":\"cover-preview\"}})])]):_vm._e()]),_c('div',{staticClass:\"container text-center\"},[_c('button',{staticClass:\"resetBtn\",style:({ cursor: _vm.isProcessing ? 'not-allowed' : 'pointer' }),attrs:{\"type\":\"button\",\"disabled\":_vm.isProcessing},on:{\"click\":_vm.handleReset}},[_vm._v(\" Reset \")]),_c('button',{staticClass:\"postBtn\",style:({ cursor: _vm.isProcessing ? 'not-allowed' : 'pointer' }),attrs:{\"type\":\"submit\",\"disabled\":_vm.isProcessing}},[_vm._v(\" \"+_vm._s(_vm.isProcessing ? \"Processing\" : \"Post\")+\" \")])])])])])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <DefaultLayout>\n    <main class=\"formCtn container my-4\">\n      <form @submit.prevent.stop=\"handleSubmit\"\n            role=\"form\">\n\n        <h3 class=\"container text-center\">Add New Post</h3>\n        <!-- Title field -->\n        <div class=\"row\">\n          <label for=\"inputTitle\"\n                 class=\"col-sm-2 col-form-label\">Title<span>*</span></label>\n          <div class=\"field col-sm-10\">\n            <input v-model=\"formData.title\"\n                   type=\"text\"\n                   class=\"form-control\"\n                   id=\"inputTitle\"\n                   name=\"title\"\n                   placeholder=\"Enter post title here\">\n            <div v-show=\"showErrorMsg && !formData.title.trim()\"\n                 class=\"errorMsg\">Title is required.</div>\n          </div>\n        </div>\n\n        <!-- Content field -->\n        <div class=\"row\">\n          <label for=\"contentArea\"\n                 class=\"col-sm-2 col-form-label\">Content<span>*</span></label>\n          <div class=\"field col-sm-10\">\n            <textarea v-model=\"formData.content\"\n                      class=\"form-control\"\n                      id=\"contentArea\"\n                      name=\"content\"\n                      rows=\"10\"\n                      placeholder=\"Enter what you want to share here\"></textarea>\n            <div v-show=\"showErrorMsg && !formData.content.trim()\"\n                 class=\"errorMsg\">Content is required.</div>\n          </div>\n\n        </div>\n\n        <!-- Post Cover Image field -->\n        <div class=\"row\">\n          <label for=\"inputCover\"\n                 class=\"col-sm-2 col-form-label\">Cover Image<span>*</span></label>\n          <div class=\"field col-sm-4 \">\n            <!-- Hide fileInput to replace default displaying with custom text -->\n            <input class=\"d-none\"\n                   type=\"file\"\n                   accept=\"image/*\"\n                   id=\"inputCover\"\n                   name=\"cover\"\n                   ref=\"fileInput\"\n                   @change=\"updateFileName\">\n            <!-- button for choosing file -->\n            <button class=\"chooseBtn form-control\"\n                    type=\"button\"\n                    @click=\"triggerFileInput\">{{ fileName ? \"Reselect file\" : \"Choose file\" }}</button>\n            <div v-show=\"showErrorMsg && !fileName\"\n                 class=\"errorMsg\">Cover image is required.</div>\n          </div>\n          <div class=\"col-sm-6\">\n            <input type=\"text\"\n                   readonly\n                   class=\"form-control\"\n                   :value=\"fileName\"\n                   placeholder=\"No file chosen\">\n          </div>\n          <!-- image preview -->\n          <div v-if=\"coverPreviewURL\"\n               class=\"coverCtn\">\n            <div class=\"col-sm-10 offset-sm-2\">\n              <img :src=\"coverPreviewURL\"\n                   alt=\"cover-preview\"\n                   class=\"coverPreview\">\n            </div>\n          </div>\n        </div>\n\n        <!-- Album field -->\n        <!-- <div class=\"row\">\n          <label for=\"selectAlbum\"\n                 class=\"col-sm-2 col-form-label\">Album (Optional)</label>\n          <div class=\"col-sm-10\">\n            <select v-model=\"formData.album\"\n                    class=\"form-control\"\n                    id=\"selectAlbum\"\n                    name=\"albums\">\n              <option value=\"\"\n                      class=\"text-center\"\n                      selected>- Choose album if you want it to show on the post -</option>\n              <option v-for=\"(albumName, index) in albumNames\"\n                      :key=\"index\"\n                      :value=\"albumName\">{{ albumName }}</option>\n            </select>\n          </div>\n        </div> -->\n\n        <!-- Post button -->\n        <div class=\"container text-center\">\n          <button @click=\"handleReset\"\n                  class=\"resetBtn\"\n                  type=\"button\"\n                  :disabled=\"isProcessing\"\n                  :style=\"{ cursor: isProcessing ? 'not-allowed' : 'pointer' }\">\n            Reset\n          </button>\n          <button class=\"postBtn\"\n                  type=\"submit\"\n                  :disabled=\"isProcessing\"\n                  :style=\"{ cursor: isProcessing ? 'not-allowed' : 'pointer' }\">\n            {{ isProcessing ? \"Processing\" : \"Post\" }}\n          </button>\n        </div>\n      </form>\n    </main>\n  </DefaultLayout>\n</template>\n\n\n<script>\nimport { DefaultLayout } from \"@/components\";\nimport { mapGetters, mapActions, mapState } from \"vuex\";\nimport { ref, uploadBytesResumable, getDownloadURL } from \"firebase/storage\";\nimport { storage } from \"@/store/firebase.js\";\n\nexport default {\n  name: \"AdminAddView\",\n  components: {\n    DefaultLayout\n  },\n  data() {\n    return {\n      mode: \"add\",\n      isProcessing: false,\n      showErrorMsg: false,\n      fileChanged: false, // for edit mode\n      fileName: null, // for file name showing\n      coverPreviewURL: null, // for preview showing\n      formData: {\n        date: \"\",\n        title: \"\",\n        content: \"\",\n        album: \"\",\n        cover: \"\",\n      },\n    }\n  },\n  mounted() {\n    if (this.$route.name === \"adminEdit\") {\n      this.mode = \"edit\";\n      const id = this.$route.params.id;\n      this.$store.dispatch(\"toChangeFocusPostID\", id);\n    }\n  },\n  beforeRouteLeave(to, from, next) {\n    // Reset focusPostID if leaving to other pages from edit page\n    if (to.name !== \"adminAdd\" && to.name !== \"adminEdit\") {\n      this.toChangeFocusPostID(\"\");\n    }\n    next();\n  },\n  computed: {\n    ...mapState([\"postChanged\"]),\n    ...mapGetters([\"albumsInOrder\", \"postFilterByPostID\"]),\n    albumNames() {\n      return Object.values(this.albumsInOrder).flat();\n    },\n  },\n  watch: {\n    postFilterByPostID() {\n      if (this.mode === \"edit\") {\n        console.log(\"postFilterByPostID: \", this.postFilterByPostID);\n        this.formData.title = this.postFilterByPostID.title;\n        this.formData.content = this.postFilterByPostID.content;\n        this.formData.album = this.postFilterByPostID.album;\n        this.formData.cover = this.postFilterByPostID.cover;\n        this.coverPreviewURL = this.postFilterByPostID.cover;\n        this.fileName = \"original post cover\";\n      }\n    },\n    postChanged() {\n      // redirect to admin page after clicking submit button\n      this.$router.push({ name: \"admin\" });\n    }\n  },\n  methods: {\n    ...mapActions([\"toChangeFocusPostID\", \"toAddPost\", \"toUpdatePost\"]),\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    updateFileName(event) {\n      // Access to the image file object\n      const file = event.target.files[0];\n      if (file) {\n        this.fileChanged = true;\n        this.fileName = file.name; // Change fileName to show\n        // Create a blob URL representing the file\n        this.coverPreviewURL = URL.createObjectURL(file);\n        console.log(file);\n        console.log(this.coverPreviewURL);\n      }\n    },\n    handleReset() {\n      this.$refs.fileInput.value = \"\"; // Clear the value of fileInput\n      this.isProcessing = false;\n      this.showErrorMsg = false;\n      this.fileName = null;\n      this.coverPreviewURL = null;\n      this.formData.date = \"\";\n      this.formData.title = \"\";\n      this.formData.content = \"\";\n      this.formData.album = \"\";\n    },\n    async handleSubmit() {\n      // Step 1: Validate form: Ensure all required fields and cover photo are provided.\n      if (!this.formData.title.trim() || !this.formData.content.trim() || !this.fileName) {\n        this.showErrorMsg = true;\n        return;\n      }\n\n      // Step 2: Update states of post button and error message \n      this.isProcessing = true;\n      this.showErrorMsg = false;\n\n      // Step 3: Check if cover URL needs to update or not\n      if (this.fileChanged) {\n        const file = this.$refs.fileInput.files[0];\n        if (file) {\n          const storageRef = ref(storage, 'post-cover/' + file.name);\n          const uploadTask = uploadBytesResumable(storageRef, file);\n\n          // Create a promise to handle the upload process\n          const uploadPromise = new Promise((resolve, reject) => {\n            uploadTask.on('state_changed', null,\n              (error) => {\n                // Handle uploading error\n                console.log(\"Error uploading cover image: \", error);\n                reject(error);\n              },\n              () => {\n                // Upload completed, get the download URL\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                  this.formData.cover = downloadURL; // Update cover URL\n                  console.log('File available at', downloadURL);\n                  resolve();\n                });\n              }\n            );\n          });\n          // Wait for the upload and URL fetching to finish\n          await uploadPromise;\n        }\n      }\n\n      // Step 4: Send back to database\n      this.formData.date = new Date().getTime(); // Update post date\n      if (this.mode === \"edit\") {\n        console.log(\"toUpdatePost payload: \", this.formData);\n        this.toUpdatePost({ id: this.$route.params.id, newPost: this.formData });\n      } else {\n        console.log(\"toAddPost payload: \", this.formData);\n        this.toAddPost(this.formData);\n      }\n    },\n  }\n}\n</script>\n\n\n<style lang=\"scss\" scoped>\n@import \"@/assets/scss/color.scss\";\n\n.formCtn {\n  max-width: 900px;\n  min-height: 65vh;\n\n  h3 {\n    color: $green-4;\n    border-bottom: 6px groove $green-2;\n    line-height: 3rem;\n    margin-bottom: 2rem;\n  }\n}\n\n.col-form-label {\n  font-weight: 600;\n  text-align: start;\n  color: $green-6;\n\n  &>span {\n    color: rgb(218, 90, 165);\n    font-size: 1.1rem;\n  }\n}\n\n.form-control:focus {\n  box-shadow: 0 0 10px $green-4;\n}\n\n.postBtn,\n.resetBtn {\n  width: 110px;\n  height: 2rem;\n  font-size: 1.1rem;\n  font-weight: 600;\n  margin: 1rem;\n  color: white;\n  border: none;\n  border-radius: 10px;\n}\n\n.postBtn {\n  background-color: $green-3;\n\n  &:hover {\n    background-color: $green-6;\n  }\n\n  &:active {\n    box-shadow: 0 0 20px $green-4;\n  }\n}\n\n.resetBtn {\n  background-color: $pink-0;\n\n  &:hover {\n    background-color: $pink-2;\n  }\n\n  &:active {\n    box-shadow: 0 0 20px $pink-1;\n  }\n}\n\ninput::placeholder,\ntextarea::placeholder {\n  color: $shadow-grey;\n}\n\n.row {\n  display: flex;\n  align-items: center;\n  margin-bottom: 2.2rem;\n}\n\n.coverCtn {\n  margin-top: .8rem;\n\n  .coverPreview {\n    width: 50%;\n  }\n}\n\n\n\n.field {\n  position: relative;\n\n  .errorMsg {\n    position: absolute;\n    left: 12px;\n    bottom: -20px;\n    color: $pink-2;\n    font-size: 0.9rem;\n    font-weight: bold;\n  }\n}\n\n@media screen and (min-width: 576px) {\n  .col-form-label {\n    text-align: end;\n  }\n}\n</style>","import mod from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AdminAddView.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./AdminAddView.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./AdminAddView.vue?vue&type=template&id=1cfad2fe&scoped=true&\"\nimport script from \"./AdminAddView.vue?vue&type=script&lang=js&\"\nexport * from \"./AdminAddView.vue?vue&type=script&lang=js&\"\nimport style0 from \"./AdminAddView.vue?vue&type=style&index=0&id=1cfad2fe&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"1cfad2fe\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","attrs","on","$event","preventDefault","stopPropagation","handleSubmit","apply","arguments","_v","directives","name","rawName","value","formData","title","expression","domProps","target","composing","$set","showErrorMsg","trim","content","ref","updateFileName","triggerFileInput","_s","fileName","coverPreviewURL","_e","style","cursor","isProcessing","handleReset","staticRenderFns","components","DefaultLayout","data","mode","fileChanged","date","album","cover","mounted","$route","id","params","$store","dispatch","beforeRouteLeave","to","from","next","toChangeFocusPostID","computed","mapState","mapGetters","albumNames","Object","values","albumsInOrder","flat","watch","postFilterByPostID","console","log","postChanged","$router","push","methods","mapActions","$refs","fileInput","click","event","file","files","URL","createObjectURL","storageRef","storage","uploadTask","uploadBytesResumable","uploadPromise","Promise","resolve","reject","error","getDownloadURL","snapshot","then","downloadURL","Date","getTime","toUpdatePost","newPost","toAddPost","component"],"sourceRoot":""}